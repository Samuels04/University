/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package s3;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author UO293747
 */
public class PaintPanel extends javax.swing.JPanel {
    
    private static int noCallsToPaintMethod;
    private static int initPosX, initPosY, finalPosX, finalPosY = 0;
    
    void setInitialPosition(int x, int y){
        setInitPosX(x);
        setInitPosY(y);
    }
    
    void setFinalPosition(int x, int y){
        setFinalPosX(x);
        setFinalPosY(y);
    }
    public static int getInitPosX() {
        return initPosX;
    }

    public static void setInitPosX(int initPosX) {
        PaintPanel.initPosX = initPosX;
    }

    public static int getInitPosY() {
        return initPosY;
    }

    public static void setInitPosY(int initPosY) {
        PaintPanel.initPosY = initPosY;
    }

    public static int getFinalPosX() {
        return finalPosX;
    }

    public static void setFinalPosX(int finalPosX) {
        PaintPanel.finalPosX = finalPosX;
    }

    public static int getFinalPosY() {
        return finalPosY;
    }

    public static void setFinalPosY(int finalPosY) {
        PaintPanel.finalPosY = finalPosY;
    }
    
    public Color getColour(){
        return colour;
    }
    public void setColour(Color c){
        colour = c;
    }
    /**
     * Creates new form PaintPanel
     */
    public PaintPanel() {
        noCallsToPaintMethod = 0;
        initComponents();
        
        colour = Color.BLACK;
    }
    @Override
    public void paint(Graphics g){
        super.paint(g);
        ++noCallsToPaintMethod;
        System.out.println("Number of calls to paint method: " + noCallsToPaintMethod);
        g.setColor(colour);
        g.drawOval(Math.min(initPosX,finalPosX)-Math.abs(finalPosX-initPosX)/2, Math.min(initPosY,finalPosY)-Math.abs(finalPosX-initPosX)/2, Math.abs(finalPosX-initPosX), Math.abs(finalPosX-initPosX));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private static Color colour;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
